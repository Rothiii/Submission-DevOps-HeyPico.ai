# Main context
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events context
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP context
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Upstream servers for load balancing
    upstream devops_portfolio_backend {
        # Load balancing method
        least_conn;
        
        # Backend servers
        server app1:3000 max_fails=3 fail_timeout=30s;
        server app2:3000 max_fails=3 fail_timeout=30s;
        server app3:3000 max_fails=3 fail_timeout=30s;
        
        # Health check
        keepalive 32;
    }

    # Upstream for monitoring services
    upstream prometheus_backend {
        server prometheus:9090;
    }

    upstream grafana_backend {
        server grafana:3001;
    }

    # Main application server
    server {
        listen 80;
        listen [::]:80;
        server_name devops-portfolio.heypico.ai www.devops-portfolio.heypico.ai;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name devops-portfolio.heypico.ai www.devops-portfolio.heypico.ai;

        # SSL configuration
        ssl_certificate /etc/ssl/certs/devops-portfolio.crt;
        ssl_certificate_key /etc/ssl/private/devops-portfolio.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozTLS:10m;
        ssl_session_tickets off;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        # Root location - main application
        location / {
            proxy_pass http://devops_portfolio_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;

            # Rate limiting
            limit_req zone=api burst=20 nodelay;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://devops_portfolio_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Allow health checks without rate limiting
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # API endpoints with stricter rate limiting
        location /api/ {
            proxy_pass http://devops_portfolio_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Stricter rate limiting for API
            limit_req zone=api burst=10 nodelay;
        }

        # Static files with caching
        location /static/ {
            proxy_pass http://devops_portfolio_backend;
            proxy_set_header Host $host;
            
            # Cache static files
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Disable logging for static files
            access_log off;
        }

        # Metrics endpoint (restricted access)
        location /metrics {
            proxy_pass http://devops_portfolio_backend/metrics;
            proxy_set_header Host $host;
            
            # Restrict access to monitoring systems
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # NGINX status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            
            # Restrict access
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Security: Block common attack patterns
        location ~* \.(php|asp|aspx|jsp)$ {
            deny all;
            return 444;
        }

        location ~* /\. {
            deny all;
            return 444;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Monitoring subdomain - Prometheus
    server {
        listen 443 ssl http2;
        server_name prometheus.devops-portfolio.heypico.ai;

        # SSL configuration (same as main)
        ssl_certificate /etc/ssl/certs/devops-portfolio.crt;
        ssl_certificate_key /etc/ssl/private/devops-portfolio.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;

        location / {
            proxy_pass http://prometheus_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Basic auth for security
            auth_basic "Prometheus";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }
    }

    # Monitoring subdomain - Grafana
    server {
        listen 443 ssl http2;
        server_name grafana.devops-portfolio.heypico.ai;

        # SSL configuration (same as main)
        ssl_certificate /etc/ssl/certs/devops-portfolio.crt;
        ssl_certificate_key /etc/ssl/private/devops-portfolio.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;

        location / {
            proxy_pass http://grafana_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Default server block (catch-all)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        # Default SSL cert
        ssl_certificate /etc/ssl/certs/devops-portfolio.crt;
        ssl_certificate_key /etc/ssl/private/devops-portfolio.key;

        server_name _;
        
        # Return 444 for unknown hosts
        return 444;
    }
}
